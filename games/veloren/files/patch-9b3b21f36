Backport part of commit 9b3b21f36825
https://gitlab.com/veloren/veloren/-/commit/9b3b21f36825a75bf15a4a109c56528b29d93af2

--- network/src/api.rs.orig	2021-08-19 21:54:22 UTC
+++ network/src/api.rs
@@ -443,7 +443,7 @@ impl Network {
     /// [`ListenAddr`]: crate::api::ListenAddr
     #[instrument(name="network", skip(self), fields(p = %self.local_pid))]
     pub async fn connected(&self) -> Result<Participant, NetworkError> {
-        let participant = self.connected_receiver.lock().await.recv().await?;
+        let participant = self.connected_receiver.lock().await.recv().await.ok_or(NetworkError::NetworkClosed)?;
         self.participant_disconnect_sender.lock().await.insert(
             participant.remote_pid,
             Arc::clone(&participant.a2s_disconnect_s),
@@ -1194,14 +1194,6 @@ impl<T> From<crossbeam_channel::SendError<T>> for Stre
 
 impl<T> From<crossbeam_channel::SendError<T>> for NetworkError {
     fn from(_err: crossbeam_channel::SendError<T>) -> Self { NetworkError::NetworkClosed }
-}
-
-impl From<std::option::NoneError> for StreamError {
-    fn from(_err: std::option::NoneError) -> Self { StreamError::StreamClosed }
-}
-
-impl From<std::option::NoneError> for NetworkError {
-    fn from(_err: std::option::NoneError) -> Self { NetworkError::NetworkClosed }
 }
 
 impl<T> From<mpsc::error::SendError<T>> for NetworkError {
--- network/src/lib.rs.orig	2021-08-19 21:56:58 UTC
+++ network/src/lib.rs
@@ -2,7 +2,6 @@
 #![cfg_attr(test, deny(rust_2018_idioms))]
 #![cfg_attr(test, deny(warnings))]
 #![deny(clippy::clone_on_ref_ptr)]
-#![feature(try_trait)]
 
 //! Crate to handle high level networking of messages with different
 //! requirements and priorities over a number of protocols

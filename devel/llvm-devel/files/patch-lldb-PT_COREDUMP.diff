diff --git lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.cpp lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.cpp
index d795a43375ca..e7745180a081 100644
--- lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.cpp
+++ lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.cpp
@@ -131,8 +131,11 @@ NativeProcessFreeBSD::Factory::Attach(
 NativeProcessFreeBSD::Extension
 NativeProcessFreeBSD::Factory::GetSupportedExtensions() const {
   return Extension::multiprocess | Extension::fork | Extension::vfork |
-         Extension::pass_signals | Extension::auxv | Extension::libraries_svr4 |
-         Extension::savecore;
+         Extension::pass_signals | Extension::auxv | Extension::libraries_svr4
+#ifdef PT_COREDUMP
+	 | Extension::savecore
+#endif
+	 ;
 }
 
 // Public Instance Methods
@@ -1011,6 +1014,7 @@ void NativeProcessFreeBSD::MonitorClone(::pid_t child_pid, bool is_vfork,
   }
 }
 
+#ifdef PT_COREDUMP
 llvm::Expected<std::string>
 NativeProcessFreeBSD::SaveCore(llvm::StringRef path_hint) {
   using namespace llvm::sys::fs;
@@ -1037,3 +1041,4 @@ NativeProcessFreeBSD::SaveCore(llvm::StringRef path_hint) {
         close_err, "Unable to close the core dump after writing");
   return path.str().str();
 }
+#endif
diff --git lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.h lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.h
index 44b8a53699bb..0f5976b1a7d4 100644
--- lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.h
+++ lldb/source/Plugins/Process/FreeBSD/NativeProcessFreeBSD.h
@@ -91,7 +91,9 @@ public:
 
   bool SupportHardwareSingleStepping() const;
 
+#ifdef PT_COREDUMP
   llvm::Expected<std::string> SaveCore(llvm::StringRef path_hint) override;
+#endif
 
 protected:
   llvm::Expected<llvm::ArrayRef<uint8_t>>

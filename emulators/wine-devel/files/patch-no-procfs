commit 6e67f3beaabdf70832e2c71d2505fc96a4aa9456
Author: Damjan Jovanovic <damjan.jov@gmail.com>
Date:   Sat Oct 23 09:57:09 2021 +0200

    Use sysctl() instead of /proc/curproc/file throughout Wine.

diff --git dlls/ntdll/unix/loader.c dlls/ntdll/unix/loader.c
index 4e807744862..2be11dc3747 100644
--- dlls/ntdll/unix/loader.c
+++ dlls/ntdll/unix/loader.c
@@ -58,6 +58,10 @@
 #ifdef HAVE_SYS_WAIT_H
 #include <sys/wait.h>
 #endif
+#include <limits.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 #ifdef __APPLE__
 # include <CoreFoundation/CoreFoundation.h>
 # define LoadResource MacLoadResource
@@ -588,6 +592,11 @@ static void set_config_dir(void)
 static void init_paths( char *argv[] )
 {
     Dl_info info;
+#if defined (__FreeBSD__) || defined(__DragonFly__)
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    char *path;
+    size_t path_size;
+#endif
 
     argv0 = strdup( argv[0] );
 
@@ -600,7 +609,10 @@ static void init_paths( char *argv[] )
 #if (defined(__linux__) && !defined(__ANDROID__)) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
         bin_dir = realpath_dirname( "/proc/self/exe" );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-        bin_dir = realpath_dirname( "/proc/curproc/file" );
+        path = malloc( path_size = PATH_MAX );
+        if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+            bin_dir = realpath_dirname( path );
+        free( path );
 #else
         bin_dir = realpath_dirname( argv0 );
 #endif
diff --git libs/wine/config.c libs/wine/config.c
index cb42421c168..23c76fda128 100644
--- libs/wine/config.c
+++ libs/wine/config.c
@@ -28,8 +28,12 @@
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
+#include <limits.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 #include <unistd.h>
 #include <dlfcn.h>
 #ifdef HAVE_PWD_H
@@ -56,8 +60,6 @@ static void fatal_error( const char *err, ... )  __attribute__((noreturn,format(
 
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
 static const char exe_link[] = "/proc/self/exe";
-#elif defined (__FreeBSD__) || defined(__DragonFly__)
-static const char exe_link[] = "/proc/curproc/file";
 #else
 static const char exe_link[] = "";
 #endif
@@ -141,8 +143,18 @@ static char *symlink_dirname( const char *name )
 /* return the directory that contains the main exe at run-time */
 static char *get_runtime_exedir(void)
 {
+#if defined(__FreeBSD__) || defined(__DragonFly__)
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t dir_size = PATH_MAX;
+    char *dir = malloc( dir_size );
+    if (dir && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), dir, &dir_size, NULL, 0 ))
+        return dir;
+    free( dir );
+    return NULL;
+#else
     if (exe_link[0]) return symlink_dirname( exe_link );
     return NULL;
+#endif
 }
 
 /* return the base directory from argv0 */
diff --git loader/main.c loader/main.c
index fdc77c56162..242ff15accd 100644
--- loader/main.c
+++ loader/main.c
@@ -29,6 +29,10 @@
 #include <sys/stat.h>
 #include <unistd.h>
 #include <dlfcn.h>
+#include <limits.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "main.h"
 
@@ -83,8 +87,14 @@ static const char *get_self_exe( char *argv0 )
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return "/proc/self/exe";
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    return "/proc/curproc/file";
-#else
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t path_size = PATH_MAX;
+    char *path = malloc( path_size );
+    if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+        return path;
+    free( path );
+#endif
+
     if (!strchr( argv0, '/' )) /* search in PATH */
     {
         char *p, *path = getenv( "PATH" );
@@ -104,7 +114,6 @@ static const char *get_self_exe( char *argv0 )
         return NULL;
     }
     return argv0;
-#endif
 }
 
 static void *try_dlopen( const char *dir, const char *name )
diff --git server/unicode.c server/unicode.c
index 67698d7639c..86a1217b01f 100644
--- server/unicode.c
+++ server/unicode.c
@@ -25,6 +25,10 @@
 #include <stdio.h>
 #include <stdarg.h>
 #include <unistd.h>
+#include <limits.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "windef.h"
 #include "winternl.h"
@@ -240,7 +244,17 @@ static char *get_nls_dir(void)
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     dir = realpath( "/proc/self/exe", NULL );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    dir = realpath( "/proc/curproc/file", NULL );
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t dir_size = PATH_MAX;
+    dir = malloc( dir_size );
+    if (dir)
+    {
+        if (sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), dir, &dir_size, NULL, 0 ))
+        {
+            free( dir );
+            dir = NULL;
+        }
+    }
 #else
     dir = realpath( server_argv0, NULL );
 #endif
diff --git tools/widl/widl.c tools/widl/widl.c
index e5a772e87bd..79c92e2f338 100644
--- tools/widl/widl.c
+++ tools/widl/widl.c
@@ -29,6 +29,11 @@
 #include <assert.h>
 #include <ctype.h>
 #include <signal.h>
+#include <limits.h>
+#include <sys/types.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "widl.h"
 #include "utils.h"
@@ -562,7 +567,12 @@ static void init_argv0_dir( const char *argv0 )
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     dir = realpath( "/proc/self/exe", NULL );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    dir = realpath( "/proc/curproc/file", NULL );
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t path_size = PATH_MAX;
+    char *path = malloc( path_size );
+    if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+        dir = realpath( path, NULL );
+    free( path );
 #else
     dir = realpath( argv0, NULL );
 #endif
diff --git tools/winegcc/winegcc.c tools/winegcc/winegcc.c
index 5204553f739..b1123cd7e51 100644
--- tools/winegcc/winegcc.c
+++ tools/winegcc/winegcc.c
@@ -96,6 +96,11 @@
 #include <string.h>
 #include <errno.h>
 #include <ctype.h>
+#include <limits.h>
+#include <sys/types.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "utils.h"
 
@@ -747,7 +752,12 @@ static void init_argv0_dir( const char *argv0 )
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     dir = realpath( "/proc/self/exe", NULL );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    dir = realpath( "/proc/curproc/file", NULL );
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t path_size = PATH_MAX;
+    char *path = malloc( path_size );
+    if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+        dir = realpath( path, NULL );
+    free( path );
 #else
     dir = realpath( argv0, NULL );
 #endif
diff --git tools/wmc/wmc.c tools/wmc/wmc.c
index 864c969b136..2993d3c5ef7 100644
--- tools/wmc/wmc.c
+++ tools/wmc/wmc.c
@@ -24,6 +24,11 @@
 #include <stdlib.h>
 #include <string.h>
 #include <signal.h>
+#include <limits.h>
+#include <sys/types.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "wmc.h"
 #include "utils.h"
@@ -165,7 +170,12 @@ static void init_argv0_dir( const char *argv0 )
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     dir = realpath( "/proc/self/exe", NULL );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    dir = realpath( "/proc/curproc/file", NULL );
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t path_size = PATH_MAX;
+    char *path = malloc( path_size );
+    if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+        dir = realpath( path, NULL );
+    free( path );
 #else
     dir = realpath( argv0, NULL );
 #endif
diff --git tools/wrc/wrc.c tools/wrc/wrc.c
index 8cdb91195cf..b44ae6fd0e5 100644
--- tools/wrc/wrc.c
+++ tools/wrc/wrc.c
@@ -27,6 +27,11 @@
 #include <assert.h>
 #include <ctype.h>
 #include <signal.h>
+#include <limits.h>
+#include <sys/types.h>
+#ifdef HAVE_SYS_SYSCTL_H
+# include <sys/sysctl.h>
+#endif
 
 #include "../tools.h"
 #include "wrc.h"
@@ -336,7 +341,12 @@ static void init_argv0_dir( const char *argv0 )
 #if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     dir = realpath( "/proc/self/exe", NULL );
 #elif defined (__FreeBSD__) || defined(__DragonFly__)
-    dir = realpath( "/proc/curproc/file", NULL );
+    static int pathname[] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
+    size_t path_size = PATH_MAX;
+    char *path = malloc( path_size );
+    if (path && !sysctl( pathname, sizeof(pathname)/sizeof(pathname[0]), path, &path_size, NULL, 0 ))
+        dir = realpath( path, NULL );
+    free( path );
 #else
     dir = realpath( argv0, NULL );
 #endif
